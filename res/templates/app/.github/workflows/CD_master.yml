name: master

on:
  push:
    branches:
    - master

jobs:
  build: 
    runs-on: ubuntu-latest
    timeout-minutes: 15
    
    steps: 
    - name: "checkout"
      uses: actions/checkout@master

    - name: Setting up node
      uses: actions/setup-node@master
      with:
        node-version: '15.x'

    - name: Installing runner dependencies
      run: npm i

    # - name: set environment variables
    #   uses: allenevans/set-env@v2.0.0
    #   with:
    #     GOOGLE_MAPS_API_KEY: '${{ secrets.MAPS_API_KEY }}'
    
    - name: "Building"
      run: npm run build --if-present

    - name: "Testing"
      run: npm test --if-present

    - name: "Copying files to remote"
      uses: appleboy/scp-action@v0.1.1
      with:
        host: ${{ secrets.HOST }}
        username: ${{ secrets.USERNAME }}
        key: ${{ secrets.KEY }}
        passphrase: ${{ secrets.PASSPHRASE }}
        source: "public,server/dist,server/res,replServer/dist,replServer/res,.deploy"
        target: /var/www/html/$[ name ]/master
        tar_tmp_path: true

    
  # compressImages: 
  #   runs-on: ubuntu-latest
  #   timeout-minutes: 15

  #   steps: 
  #   - name: "checkout"
  #     uses: actions/checkout@master
  #     with:
  #       lfs: "true"


  #   - name: Setting up node
  #     uses: actions/setup-node@master
  #     with:
  #       node-version: '15.x'

  #   - name: Installing runner dependencies
  #     run: npm i


  #   - name: "Compressing images"
  #     run: npm run compressImages

  #   - name: "Copying files to remote"
  #     uses: appleboy/scp-action@v0.1.1
  #     with:
  #       host: ${{ secrets.HOST }}
  #       username: ${{ secrets.USERNAME }}
  #       key: ${{ secrets.KEY }}
  #       passphrase: ${{ secrets.PASSPHRASE }}
  #       source: "public/res/img/dist"
  #       target: /var/www/html/$[ name ]/master
  #       tar_tmp_path: true

  dependencies: 
    runs-on: ubuntu-latest
    timeout-minutes: 15

    steps:
    - name: Installing dependencies on remote
      uses: appleboy/ssh-action@master
      with: 
        host: ${{ secrets.HOST }}
        username: ${{ secrets.USERNAME }}
        key: ${{ secrets.KEY }}
        passphrase: ${{ secrets.PASSPHRASE }}
        script: |
          cd /var/www/html/$[ name ]/master
          source ~/.nvm/nvm.sh
          nvm use default
          git pull
          npm i

  deploy: 
    runs-on: ubuntu-latest
    needs: [build, dependencies]
    timeout-minutes: 15

    steps:
    - name: Starting process
      uses: appleboy/ssh-action@master
      with: 
        host: ${{ secrets.HOST }}
        username: ${{ secrets.USERNAME }}
        key: ${{ secrets.KEY }}
        passphrase: ${{ secrets.PASSPHRASE }}
        script: |
          cd /var/www/html/$[ name ]/master
          source ~/.nvm/nvm.sh
          nvm use default
          wait-on ecosystem.config.js
          node pm2Reload.js